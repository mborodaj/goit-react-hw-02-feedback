{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Section/Section.js","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Notification/Notification.js","App.js","index.js","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","console","log","className","styles","statisticsList","statisticsListItem","textOrange","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","map","button","type","feedbackButton","onClick","Notification","text","App","state","hendleFeedback","e","feedback","target","textContent","setState","prevFeedback","countTotalFeedback","countPositiveFeedbackPercentage","result","Math","round","this","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,mBAAqB,uCAAuC,WAAa,iC,gLCgBhIC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBC6BQC,EAhCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAE/C,OADAC,QAAQC,IAAIH,GAEV,qBAAII,UAAWC,IAAOC,eAAtB,UACE,qBAAIF,UAAWC,IAAOE,mBAAtB,mBACQ,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCX,OAE7C,qBAAIO,UAAWC,IAAOE,mBAAtB,sBACW,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCV,OAEhD,qBAAIM,UAAWC,IAAOE,mBAAtB,kBACO,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCT,OAE5C,qBAAIK,UAAWC,IAAOE,mBAAtB,oBACS,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCR,OAE9C,qBAAII,UAAWC,IAAOE,mBAAtB,+BACqB,IACnB,uBAAMH,UAAWC,IAAOG,WAAxB,UAAqCP,EAArC,c,gBCMOQ,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAUC,OAAOC,KAAKJ,GAE5B,OACE,mCACGE,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLb,UAAWC,IAAOa,eAElBC,QAASR,EAJX,SAMGK,GAHIA,SCFAI,EARM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OAAO,4BAAIA,KCuDEC,E,4MAlDbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,eAAiB,SAAAC,GACf,IAAMC,EAAWD,EAAEE,OAAOC,YAC1B,EAAKC,UAAS,SAAAC,GAAY,sBAAQJ,EAAWI,EAAaJ,GAAY,O,EAGxEK,mBAAqB,WACnB,OAAO,EAAKR,MAAM1B,KAAO,EAAK0B,MAAMzB,QAAU,EAAKyB,MAAMxB,K,EAG3DiC,gCAAkC,WAChC,IAAIC,EAAU,EAAKV,MAAM1B,MAAQ,EAAK0B,MAAM1B,KAAO,EAAK0B,MAAMxB,KAAQ,IACtE,MAAM,GAAN,OAAUmC,KAAKC,MAAMF,K,4CAGvB,WAAU,IAAD,EACwBG,KAAKb,MAA5B1B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBsC,EAAgBD,KAAKL,qBAE3B,OACE,qCACE,cAAC,EAAD,CAAcrC,MAAM,wBAApB,SACE,cAAC,EAAD,CACEgB,QAAS0B,KAAKb,MACdZ,gBAAiByB,KAAKZ,mBAG1B,cAAC,EAAD,CAAc9B,MAAM,aAApB,SACG2C,EAAgB,EACf,cAAC,EAAD,CACExC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoC,KAAKL,qBACZ9B,mBAAoBmC,KAAKJ,oCAG3B,cAAC,EAAD,CAAcX,KAAK,uC,GA3CbiB,a,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BpD,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.a2eee998.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__1BQbH\",\"statisticsListItem\":\"Statistics_statisticsListItem__2uN3M\",\"textOrange\":\"Statistics_textOrange__39n7C\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  console.log(total);\n  return (\n    <ul className={styles.statisticsList}>\n      <li className={styles.statisticsListItem}>\n        Good: <span className={styles.textOrange}>{good}</span>\n      </li>\n      <li className={styles.statisticsListItem}>\n        Neutral: <span className={styles.textOrange}>{neutral}</span>\n      </li>\n      <li className={styles.statisticsListItem}>\n        Bad: <span className={styles.textOrange}>{bad}</span>\n      </li>\n      <li className={styles.statisticsListItem}>\n        Total: <span className={styles.textOrange}>{total}</span>\n      </li>\n      <li className={styles.statisticsListItem}>\n        Positive feedback:{' '}\n        <span className={styles.textOrange}>{positivePercentage}%</span>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport styles from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const buttons = Object.keys(options);\n\n  return (\n    <>\n      {buttons.map(button => (\n        <button\n          type=\"button\"\n          className={styles.feedbackButton}\n          key={button}\n          onClick={onLeaveFeedback}\n        >\n          {button}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ text }) => {\n  return <p>{text}</p>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import baseCss from './base.module.css';\n\nimport React, { Component } from 'react';\nimport SectionTitle from './Components/Section/Section';\nimport Statistics from './Components/Statistics/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\nimport Notification from './Components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  hendleFeedback = e => {\n    const feedback = e.target.textContent;\n    this.setState(prevFeedback => ({ [feedback]: prevFeedback[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let result = (this.state.good / (this.state.good + this.state.bad)) * 100;\n    return `${Math.round(result)}`;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n\n    return (\n      <>\n        <SectionTitle title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.hendleFeedback}\n          />\n        </SectionTitle>\n        <SectionTitle title=\"Statistics\">\n          {totalFeedback > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification text=\"Please give your feedback\" />\n          )}\n        </SectionTitle>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButton\":\"FeedbackOptions_feedbackButton__30qEP\"};"],"sourceRoot":""}